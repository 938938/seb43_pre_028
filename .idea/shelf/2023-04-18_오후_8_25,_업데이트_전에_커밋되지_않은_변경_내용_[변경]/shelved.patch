Index: server/src/main/java/server/server/answer/AnswerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package server.server.answer;\r\n\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.validation.annotation.Validated;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport preproject.answer.dto.AnswerDto;\r\nimport preproject.answer.entity.Answer;\r\nimport preproject.answer.mapper.AnswerMapper;\r\nimport preproject.answer.service.AnswerService;\r\n\r\nimport javax.validation.Valid;\r\nimport javax.validation.constraints.Positive;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@RestController\r\n@RequestMapping(\"/answers\")\r\n@Validated\r\n@Slf4j\r\n// TODO Bean등록 에러 잡기\r\npublic class AnswerController {\r\n    private final AnswerService answerService;\r\n    private final AnswerMapper answerMapper;\r\n\r\n    public AnswerController(AnswerService answerService, AnswerMapper answerMapper) {\r\n        this.answerService = answerService;\r\n        this.answerMapper = answerMapper;\r\n    }\r\n\r\n    @PostMapping  // 생성\r\n    public ResponseEntity postAnswer(@Valid @RequestBody AnswerDto.postAnswer postAnswer) {\r\n        Answer answer = answerMapper.answerPostToAnswer(postAnswer);\r\n\r\n\r\n        Answer response = answerService.createAnswer(answer);\r\n\r\n        return new ResponseEntity<>(answerMapper.answerToResponseAnswer(response), HttpStatus.CREATED);\r\n    }\r\n\r\n    @PatchMapping(\"/{answer-id}\")  // 수정\r\n    public ResponseEntity patchAnswer(@PathVariable(\"answer-id\") @Positive long answerId,\r\n                                    @Valid @RequestBody AnswerDto.patchAnswer patchAnswer) {\r\n        patchAnswer.setAnswerId(answerId);\r\n\r\n        Answer response = answerService.updateAnswer(answerMapper.answerPatchToAnswer(patchAnswer));\r\n\r\n        return new ResponseEntity<>(answerMapper.answerToResponseAnswer(response), HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"/{answer-id}\")  // 특정 아이디 조회\r\n    public ResponseEntity getAnswer(@PathVariable(\"answer-id\") @Positive long answerId) {\r\n        Answer response = answerService.findAnswer(answerId);\r\n\r\n        return new  ResponseEntity<>(answerMapper.answerToResponseAnswer(response), HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping  // 모든 아이디 조회\r\n    public ResponseEntity getAnswers() {\r\n        List<Answer> answers = answerService.findAnswers();\r\n\r\n        List<AnswerDto.responseAnswer> response =\r\n                answers.stream()\r\n                        .map(answer -> answerMapper.answerToResponseAnswer(answer))\r\n                        .collect(Collectors.toList());\r\n\r\n        return new ResponseEntity<>(response, HttpStatus.OK);\r\n    }\r\n\r\n    @DeleteMapping(\"/{answer-id}\")  // 특정 아이디 삭제\r\n    public ResponseEntity deleteTodo(@PathVariable(\"answer-id\") @Positive long answerId) {\r\n        System.out.println(\"# answerId : \" + answerId);\r\n\r\n        answerService.deleteAnswer(answerId);\r\n\r\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\r\n    }\r\n}\r\n
===================================================================
diff --git a/server/src/main/java/server/server/answer/AnswerController.java b/server/src/main/java/server/server/answer/AnswerController.java
--- a/server/src/main/java/server/server/answer/AnswerController.java	
+++ b/server/src/main/java/server/server/answer/AnswerController.java	
@@ -5,10 +5,12 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
-import preproject.answer.dto.AnswerDto;
-import preproject.answer.entity.Answer;
-import preproject.answer.mapper.AnswerMapper;
-import preproject.answer.service.AnswerService;
+
+import server.server.answer.dto.AnswerDto;
+import server.server.answer.entity.Answer;
+import server.server.answer.mapper.AnswerMapper;
+import server.server.answer.service.AnswerService;
+
 
 import javax.validation.Valid;
 import javax.validation.constraints.Positive;
