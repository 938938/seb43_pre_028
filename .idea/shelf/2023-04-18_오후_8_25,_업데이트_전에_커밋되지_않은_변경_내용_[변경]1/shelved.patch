Index: server/src/main/java/server/server/answer/mapper/AnswerMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package server.server.answer.mapper;\r\n\r\nimport org.mapstruct.Mapper;\r\nimport org.springframework.stereotype.Component;\r\nimport preproject.answer.dto.AnswerDto;\r\nimport preproject.answer.entity.Answer;\r\n\r\n@Component\r\n@Mapper(componentModel = \"spring\")\r\npublic interface AnswerMapper {\r\n    Answer answerPostToAnswer(AnswerDto.postAnswer postAnswer);\r\n    Answer answerPatchToAnswer(AnswerDto.patchAnswer patchAnswer);\r\n    AnswerDto.responseAnswer answerToResponseAnswer(Answer answer);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/src/main/java/server/server/answer/mapper/AnswerMapper.java b/server/src/main/java/server/server/answer/mapper/AnswerMapper.java
--- a/server/src/main/java/server/server/answer/mapper/AnswerMapper.java	
+++ b/server/src/main/java/server/server/answer/mapper/AnswerMapper.java	
@@ -2,8 +2,9 @@
 
 import org.mapstruct.Mapper;
 import org.springframework.stereotype.Component;
-import preproject.answer.dto.AnswerDto;
-import preproject.answer.entity.Answer;
+import server.server.answer.dto.AnswerDto;
+import server.server.answer.entity.Answer;
+
 
 @Component
 @Mapper(componentModel = "spring")
Index: server/src/main/java/server/server/answer/service/AnswerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package server.server.answer.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport preproject.answer.entity.Answer;\r\nimport preproject.answer.exception.BusinessLogicException;\r\nimport preproject.answer.exception.ExceptionCode;\r\nimport preproject.answer.repository.AnswerRepository;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class AnswerService {\r\n    private AnswerRepository answerRepository;\r\n\r\n    public AnswerService(AnswerRepository answerRepository) {\r\n        this.answerRepository = answerRepository;\r\n    }\r\n\r\n    public Answer createAnswer(Answer answer) {  // 생성\r\n        return answerRepository.save(answer);\r\n    }\r\n\r\n    public Answer updateAnswer(Answer answer) {  // 수정\r\n        Answer findAnswer = findVerifiedAnswer(answer.getAnswerId());\r\n\r\n        Optional.ofNullable(answer.getContent())\r\n                .ifPresent(findAnswer::setContent);\r\n        return answerRepository.save(findAnswer);\r\n    }\r\n\r\n    public Answer findAnswer(long answerId) {  // 특정 회원 조회\r\n\r\n        return findVerifiedAnswer(answerId);\r\n    }\r\n\r\n    public List<Answer> findAnswers() {  // 모든 회원 조회\r\n\r\n        return (List<Answer>) answerRepository.findAll();\r\n    }\r\n\r\n    public void deleteAnswer(long answerId) {  // 특정 회원 삭제\r\n        Answer findAnswer = findVerifiedAnswer(answerId);\r\n\r\n        answerRepository.delete(findAnswer);\r\n    }\r\n\r\n    public Answer findVerifiedAnswer(long answerId) {  // 해당 답변글의 존재 유무 체크\r\n        Optional<Answer> optionalAnswer =\r\n                answerRepository.findByAnswer(String.valueOf(answerId));\r\n        Answer findAnswer =\r\n                optionalAnswer.orElseThrow(() -> new BusinessLogicException(ExceptionCode.ANSWER_NOT_FOUND));\r\n\r\n        return findAnswer;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/src/main/java/server/server/answer/service/AnswerService.java b/server/src/main/java/server/server/answer/service/AnswerService.java
--- a/server/src/main/java/server/server/answer/service/AnswerService.java	
+++ b/server/src/main/java/server/server/answer/service/AnswerService.java	
@@ -1,10 +1,11 @@
 package server.server.answer.service;
 
 import org.springframework.stereotype.Service;
-import preproject.answer.entity.Answer;
-import preproject.answer.exception.BusinessLogicException;
-import preproject.answer.exception.ExceptionCode;
-import preproject.answer.repository.AnswerRepository;
+import server.server.answer.entity.Answer;
+import server.server.answer.exception.BusinessLogicException;
+import server.server.answer.exception.ExceptionCode;
+import server.server.answer.repository.AnswerRepository;
+
 
 import java.util.List;
 import java.util.Optional;
Index: server/src/main/java/server/server/answer/repository/AnswerRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package server.server.answer.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport preproject.answer.entity.Answer;\r\n\r\nimport java.util.Optional;\r\n\r\npublic interface AnswerRepository extends JpaRepository<Answer, Long> {\r\n    Optional<Answer> findByAnswer(String content);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/src/main/java/server/server/answer/repository/AnswerRepository.java b/server/src/main/java/server/server/answer/repository/AnswerRepository.java
--- a/server/src/main/java/server/server/answer/repository/AnswerRepository.java	
+++ b/server/src/main/java/server/server/answer/repository/AnswerRepository.java	
@@ -1,7 +1,8 @@
 package server.server.answer.repository;
 
 import org.springframework.data.jpa.repository.JpaRepository;
-import preproject.answer.entity.Answer;
+import server.server.answer.entity.Answer;
+
 
 import java.util.Optional;
 
